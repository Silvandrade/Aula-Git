

===================== PRIMEIROS PASSOS ==========================

1 - Criar um pasta em um qualquer local.
2 - Clicar com o botão direito e clicar em Git Bash Here.

===================== PRIMEIROS COMANDOS =======================

1 - git init - inicia um repositório GIT.
2 - git status - verifica alterações no repositório.
3 - git add "nome completo do arquivo" - adiciona um arquivo ao repositório.
4 - git add . - adiciona todos os arquivos.
5 - git commit -m "digite uma mensagem" - salva todas as alterações do repositório.

5.1 - git config --global user.email "seu email" - se for a primeira vez que está usando o git no computador.
5.2 - git config --global user.name "seu nome" - se for a primeira vez que está usando o git no computador.

6 - git remote add origin "url do repositório" - define qual repositório da núvem as alterações serão enviadas.
7 - git push - envia todos os arquivos do repositório local para a núvem do GitHub.

7.1 - git push --set-upstream origin master - define qual branches da núvem as alterações serão enviadas se for a primeira vez.


=================== PRIMEIRAS ALTERAÇÕES ===========================

1 - git status
2 - git add
3 - git commit -m "mensagem"
4 - git push


================== HISTÓRICO DE ALTERAÇÕES ===========================

1 - git reflog - exibe o histórico de alterações.


==================== RESTAURAR UMA VERSÃO ============================

1 - git reset --hard codigo_da_versao_exibido_no_histórico - restaura os arquivos para o commit selecionado.


=================== TRABALHANDO COM BRANCHES ==========================

1 - git branch - exibe as branches disponíveis.
2 - git branch "nome da branch" - cria uma nova branch vazia.

2.1 - git branch -b "nome da branch a ser criada" "nome da brach base" - cria uma branch e passar todos os arquivos da brach de origem para nova branch.

3 - git checkout "nome da branch" - seleciona a branch para envio de alterações.


======================== UNINDO BRANCHES ===============================

0 - git pull - puxar as atualizações antes de fazer o merge.
1 - git checkout "nome da branch" - seleciona a branch que receberar as atualizações.
2 - git merge "nome da branch" - seleciona a branch de onve vai ser puxada as atualizações.
3 - git push.


======================= IGNORAR ARQUIVOS ==============================

1 - touch .gitignore - cria um arquivo gitignore depois é só abrir o arquivo com o editor de texto e escrever os nome dos arquivos e pastas que devem ser ignorados.